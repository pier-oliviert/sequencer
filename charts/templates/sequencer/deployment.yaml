apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "operator.fullname" . }}-controller
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: controller
    control-plane: sequencer-controller
  {{- include "operator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.sequencer.replicas }}
  selector:
    matchLabels:
      control-plane: sequencer-controller
  template:
    metadata:
      labels:
        control-plane: sequencer-controller
        {{- include "operator.labels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
          - --leader-elect
        command:
        - /manager
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: cluster.local
        envFrom:
        - configMapRef:
            name: {{ include "operator.fullname" . }}-controller
        image: {{ quote .Values.sequencer.image }}
        imagePullPolicy: {{ .Values.sequencer.pullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.sequencer.resources | nindent 10
          }}
        securityContext: 
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      securityContext:
        runAsNonRoot: false
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: {{ include "operator.fullname" . }}-controller
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
