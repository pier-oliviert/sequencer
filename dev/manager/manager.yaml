apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: namespace
    app.kubernetes.io/instance: system
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: sequencer
    app.kubernetes.io/part-of: sequencer
    app.kubernetes.io/managed-by: kustomize
  name: sequencer-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: buildkitd
  namespace: sequencer-system
data:
  buildkitd.toml: |
    debug = false
    [registry."docker.io"]
      mirrors = ["sequencer-docker-cache.sequencer-system.svc.cluster.local"]
    [registry."sequencer-docker-cache.sequencer-system.svc.cluster.local"]
    ca=["/srv/certs/ca.crt"]
    [[registry."sequencer-docker-cache.sequencer-system.svc.cluster.local".keypair]]
      key="/srv/certs/tls.key"
      cert="/srv/certs/tls.crt"
    [registry."sequencer-build-cache.sequencer-system.svc.cluster.local"]
    ca=["/srv/certs/ca.crt"]
    [[registry."sequencer-build-cache.sequencer-system.svc.cluster.local".keypair]]
      key="/srv/certs/tls.key"
      cert="/srv/certs/tls.crt"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: sequencer-system
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: deployment
    app.kubernetes.io/instance: sequencer-manager
    app.kubernetes.io/component: manager
    app.kubernetes.io/part-of: sequencer
    app.kubernetes.io/managed-by: kustomize
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
        app.kubernetes.io/instance: sequencer-manager
        app.kubernetes.io/component: manager
        app.kubernetes.io/part-of: sequencer
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/arch
                  operator: In
                  values:
                    - amd64
                    - arm64
                - key: kubernetes.io/os
                  operator: In
                  values:
                    - linux
      securityContext:
        runAsNonRoot: false # Change this when possible
        seccompProfile:
          type: RuntimeDefault
      containers:
      - command:
        - /manager
        args:
        - --leader-elect
        image: sequencer-operator:dev
        envFrom:
          - configMapRef:
              name: controller-manager
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10
